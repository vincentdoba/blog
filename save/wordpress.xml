<?xml version="1.0" encoding="UTF-8" ?>
<!-- This is a WordPress eXtended RSS file generated by WordPress as an export of your site. -->
<!-- It contains information about your site's posts, pages, comments, categories, and other content. -->
<!-- You may use this file to transfer that content from one site to another. -->
<!-- This file is not intended to serve as a complete backup of your site. -->

<!-- To import this information into a WordPress site follow these steps: -->
<!-- 1. Log in to that site as an administrator. -->
<!-- 2. Go to Tools: Import in the WordPress admin panel. -->
<!-- 3. Install the "WordPress" importer from the list. -->
<!-- 4. Activate & Run Importer. -->
<!-- 5. Upload this file using the form provided on that page. -->
<!-- 6. You will first be asked to map the authors in this export file to users -->
<!--    on the site. For each author, you may choose to map to an -->
<!--    existing user on the site or to create a new user. -->
<!-- 7. WordPress will then import each of the posts, pages, comments, categories, etc. -->
<!--    contained in this file into your site. -->

<!-- generator="WordPress/3.8.1" created="2014-03-17 22:32" -->
<rss version="2.0"
	xmlns:excerpt="http://wordpress.org/export/1.2/excerpt/"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:wp="http://wordpress.org/export/1.2/"
>

<channel>
	<title>很黄很暴力</title>
	<link>http://vincent.cedeela.fr</link>
	<description>Blog de Vincent Doba</description>
	<pubDate>Mon, 17 Mar 2014 22:32:57 +0000</pubDate>
	<language>fr-FR</language>
	<wp:wxr_version>1.2</wp:wxr_version>
	<wp:base_site_url>http://vincent.cedeela.fr</wp:base_site_url>
	<wp:base_blog_url>http://vincent.cedeela.fr</wp:base_blog_url>

	<wp:author><wp:author_id>1</wp:author_id><wp:author_login>vincent</wp:author_login><wp:author_email>vincent@cedeela.fr</wp:author_email><wp:author_display_name><![CDATA[vincent]]></wp:author_display_name><wp:author_first_name><![CDATA[]]></wp:author_first_name><wp:author_last_name><![CDATA[]]></wp:author_last_name></wp:author>


	<generator>http://wordpress.org/?v=3.8.1</generator>

	<item>
				<title>Compiler un texte en Chinois avec Latex sous Linux</title>
		<link>http://vincent.cedeela.fr/?p=80</link>
		<pubDate>Thu, 04 Nov 2010 05:45:59 +0000</pubDate>
		<dc:creator><![CDATA[vincent]]></dc:creator>
		<guid isPermaLink="false">http://vincent.cedeela.fr/?p=80</guid>
		<description></description>
		<content:encoded><![CDATA[La manière rapide pour écrire Chinois avec Latex

<h2> Installer Latex-CJK </h2>

Sous <i>Archlinux</i> :
<code>
# pacman -S texlive-langcjk
</code>

Sous <i>Debian</i> :
<code>
# apt-get install latex-cjk-common
</code>

<h2>Écrire Chinois</h2>

Rajouter dans l'entête de votre fichier Latex le paquet chargeant CJK :

<blockquote>\usepackage{CJKutf8}</blockquote>

Et maintenant pour taper chinois, il suffit de taper entre les deux commandes suivantes :

<blockquote>
\begin{CJK}{UTF8}{gbsn}

  你的汉语文本

\end{CJK}
</blockquote>

<b>Note :</b> Rien ne vous empêche de taper un texte en français entre les deux balises. Ainsi pour ma part j'ouvre la balise en tête de document et la ferme à la fin, comme ceci :

<blockquote>
\begin{document}
\begin{CJK}{UTF8}{gbsn}

  Votre texte en Français
  你的汉语文本

\end{CJK}
\end{document}
</blockquote>

<h2>Bonus - Pour le Japonais</h2>

Taper un texte en japonais, c'est comme taper un texte en chinois, il n'y a que la police de caractère qui change :

<blockquote>
\begin{CJK}{UTF8}{min}

  Votre texte en japonais

\end{CJK}
</blockquote>

<h2> Double Bonus - Le pinyin </h2>

Il suffit de charger le paquet pinyin dans votre fichier Latex :

<blockquote>\usepackage{pinyin}</blockquote>

Et après de taper le pinyin comme ceci dans le texte :

<blockquote>\wo3 \shi4 \fa3\guo2\ren2</blockquote>

<b>Note :</b> Le paquet pinyin n'est pas compatible avec certaines lettres grecques. Par exemple, utiliser <i>\pi</i> avec le paquet pinyin chargé provoquera une erreur à la compilation

]]></content:encoded>
		<excerpt:encoded><![CDATA[La manière rapide pour écrire Chinois avec Latex]]></excerpt:encoded>
		<wp:post_id>80</wp:post_id>
		<wp:post_date>2010-11-04 05:45:59</wp:post_date>
		<wp:post_date_gmt>2010-11-04 05:45:59</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>compiler-un-texte-en-chinois-avec-latex-sous-linux</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="chine"><![CDATA[Chine]]></category>
		<category domain="category" nicename="latex"><![CDATA[Latex]]></category>
		<category domain="post_tag" nicename="latex"><![CDATA[Latex]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>78</wp:comment_id>
			<wp:comment_author><![CDATA[d'Estève de Pradel]]></wp:comment_author>
			<wp:comment_author_email>xavierdestev@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>83.202.158.109</wp:comment_author_IP>
			<wp:comment_date>2013-05-08 15:39:39</wp:comment_date>
			<wp:comment_date_gmt>2013-05-08 15:39:39</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[J'ai fait mais j'obtient undefined control sequence avec le premier caractère sous ubuntu (Linux) : :evil: 

\documentclass{article}

\usepackage[utf8]{inputenc}
\usepackage{CJKutf8}

 \begin{document}
\begin{CJK}{UTF8}{gbsn}
     你的汉语文本
\end{CJK}
\end{document}]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>79</wp:comment_id>
			<wp:comment_author><![CDATA[d'Estève de Pradel]]></wp:comment_author>
			<wp:comment_author_email>xavierdestev@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>83.202.158.109</wp:comment_author_IP>
			<wp:comment_date>2013-05-08 16:24:19</wp:comment_date>
			<wp:comment_date_gmt>2013-05-08 16:24:19</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[c'est bon il faut installer aussi 
latex-cjk et latex-cjk-all]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
				<title>Compile a Chinese text with Latex under Linux</title>
		<link>http://vincent.cedeela.fr/?p=90&#038;lang=en</link>
		<pubDate>Thu, 04 Nov 2010 06:02:41 +0000</pubDate>
		<dc:creator><![CDATA[vincent]]></dc:creator>
		<guid isPermaLink="false">http://vincent.cedeela.fr/?p=90</guid>
		<description></description>
		<content:encoded><![CDATA[The quick way to use Chinese with Latex.

<h2> Install Latex-CJK </h2>

With <i>Archlinux</i> :
<code>
# pacman -S texlive-langcjk
</code>

With <i>Debian</i> :
<code>
# apt-get install latex-cjk-common
</code>

<h2>Typing Chinese</h2>

Add in headers of your latex file the below line that will load CJK's package :

<blockquote>\usepackage{CJKutf8}</blockquote>

And now, to successfully compile a Latex file with Chinese characters, you just need to write your Chinese text between these two tags :

<blockquote>
\begin{CJK}{UTF8}{gbsn}

  Your text in Chinese

\end{CJK}
</blockquote>

<b>Note :</b> You can also type English between these two tags. That's why I usually put these tag just after the beginning of my document and just before the end of my document

<blockquote>
\begin{document}
\begin{CJK}{UTF8}{gbsn}

  Your text in English
  你的汉语文本

\end{CJK}
\end{document}
</blockquote>

<h2>Bonus - Typing Japanese</h2>

Typing a Japanese text is like typing a Chinese text, you just need to change the font :

<blockquote>
\begin{CJK}{UTF8}{min}

  Your text in Japanese

\end{CJK}
</blockquote>

<h2> Double Bonus - Pinyin </h2>

You just have to load the pinyin package by adding this line to your Latex file headers :

<blockquote>\usepackage{pinyin}</blockquote>

And type your pinyin text as follow :

<blockquote>\wo3 \shi4 \fa3\guo2\ren2</blockquote>

<b>Note :</b> Pinyin package conflicts with some Greek characters . For instance, typing <i>\pi</i> with a loaded pinyin package raise an error when compiling.]]></content:encoded>
		<excerpt:encoded><![CDATA[The quick way to use Chinese with Latex.]]></excerpt:encoded>
		<wp:post_id>90</wp:post_id>
		<wp:post_date>2010-11-04 06:02:41</wp:post_date>
		<wp:post_date_gmt>2010-11-04 06:02:41</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>compile-a-chinese-text-with-latex-under-linux</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="china"><![CDATA[China]]></category>
		<category domain="post_tag" nicename="latex"><![CDATA[Latex]]></category>
		<category domain="category" nicename="latex-en"><![CDATA[Latex @en]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>71</wp:comment_id>
			<wp:comment_author><![CDATA[norbux]]></wp:comment_author>
			<wp:comment_author_email>norbulinux@aol.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>62.83.165.80</wp:comment_author_IP>
			<wp:comment_date>2011-07-29 21:03:30</wp:comment_date>
			<wp:comment_date_gmt>2011-07-29 21:03:30</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[thank you!
I'm studing chinese and i want to use LaTeX to write my documents! 
谢谢！]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
				<title>编译汉字文本用Latex和Linux</title>
		<link>http://vincent.cedeela.fr/?p=99&#038;lang=zh-hans</link>
		<pubDate>Thu, 04 Nov 2010 07:22:09 +0000</pubDate>
		<dc:creator><![CDATA[vincent]]></dc:creator>
		<guid isPermaLink="false">http://vincent.cedeela.fr/?p=99</guid>
		<description></description>
		<content:encoded><![CDATA[<b>我的中文不太好, 所以若您找到错误就请通知我.</b>

一个快速的方法写汉语用Latex

<h2>安装Latex-CJK </h2>

在 <i>Archlinux</i> :
<code>
# pacman -S texlive-langcjk
</code>

在 <i>Debian</i> :
<code>
# apt-get install latex-cjk-common
</code>

<h2>写汉语</h2>

在您的文件头加入那个行起见装载CJK包 :

<blockquote>\usepackage{CJKutf8}</blockquote>

就您只要在那两个指令中间写汉语 :

<blockquote>
\begin{CJK}{UTF8}{gbsn}

  您的汉语文本

\end{CJK}
</blockquote>

<b>通知 :</b> 在那两个指令您也可以写英语. 所以我本人在文件头和文件尾加入这个指令.

<blockquote>
\begin{document}
\begin{CJK}{UTF8}{gbsn}

  Your text in English
  您的汉语文本

\end{CJK}
\end{document}
</blockquote>

<h2>副刊 - 写日语</h2>

写汉语和写日语一样, 您只要更改字体

<blockquote>
\begin{CJK}{UTF8}{min}

 您的日语文本

\end{CJK}
</blockquote>

<h2> 副刊 - 写拼音 </h2>

加入这个行起见装载pinyin包 :

<blockquote>\usepackage{pinyin}</blockquote>

就写拼音 :

<blockquote>\wo3 \shi4 \fa3\guo2\ren2</blockquote>

<b>通知 :</b> pinyin包断一些希腊字. 例如, 用<i>\pi</i>与拼音包不能编译.]]></content:encoded>
		<excerpt:encoded><![CDATA[一个快速的方法写汉语用Latex]]></excerpt:encoded>
		<wp:post_id>99</wp:post_id>
		<wp:post_date>2010-11-04 07:22:09</wp:post_date>
		<wp:post_date_gmt>2010-11-04 07:22:09</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e7%bc%96%e8%af%91%e6%b1%89%e5%ad%97%e6%96%87%e6%9c%ac%e7%94%a8latex%e5%92%8clinux</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="latex"><![CDATA[Latex]]></category>
		<category domain="category" nicename="latex-zh-hans"><![CDATA[Latex软件]]></category>
		<category domain="post_tag" nicename="chine-zh-hans"><![CDATA[中国]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>Plus de détails sur la touche Compose</title>
		<link>http://vincent.cedeela.fr/?p=159</link>
		<pubDate>Thu, 11 Nov 2010 15:03:07 +0000</pubDate>
		<dc:creator><![CDATA[vincent]]></dc:creator>
		<guid isPermaLink="false">http://vincent.cedeela.fr/?p=159</guid>
		<description></description>
		<content:encoded><![CDATA[Je me baladais sur internet lorsque je suis tombé sur cet <a href="http://calimeroteknik.free.fr/blag/?article5/la-touche-compose">article</a> par <a href="http://calimeroteknik.free.fr/">CalimeroTeknik</a>, expliquant comment taper des caractères aussi indispensables que ☺ ou ♥ en utilisant la touche 'menu' (je vous laisse chercher cette touche sur votre clavier, la solution est sur le blog de CalimeroTeknik).

Ni une ni deux je décide donc d'appliquer le contenu de cet article. Sauf que : 
<ul>
  <li>Je ne veux pas utiliser la touche 'menu', mais la touche 'windows' / 'super' (touche située entre la touche 'Fn' et la touche 'Alt' sur mon clavier).</li>
  <li>J'aimerais bien savoir ce que je peux taper avec cette fonction compose (à part ☺ et ♥), voir ajouter des caractères spéciaux.</li>
 <li>Je voudrais utiliser cette fonction en parallèle avec SCIM, qui me permet de taper les caractères Chinois et Japonais.</li>
</ul>

<b>Note :</b> les commandes et méthodes décrites dans cet article ont été appliquées sur mon ordinateur principal dont la configuration est disponible <a href="?page_id=142">ici</a>.

<h2>Étape 1 : comment s'appelle la touche 'windows' / 'super' pour mon ordinateur ?</h2>

Pour changer l'attribution des touches de manière temporaire (c'est à dire tant que l'on redémarre pas le serveur X), il suffit d'utiliser la commande suivante :
<code>
$ setxkbmap -option 'nomducaracterequelonveutafficher:nomdelatouche'
</code>

Ainsi pour attribuer l'action 'compose' à la touche 'menu', il suffit de taper :
<code>
$ setxkbmap -option 'compose:menu'
</code>

Malheureusement, je ne veux pas attribuer l'action 'compose' à la touche 'menu', mais à la touche 'windows' / 'super'. Où trouver le nom que xkb attribue aux touches de son clavier (non, <i>setxkbmap -option 'compose:windows/super'</i> ne marche pas) ? Dans le fichier <i>/usr/share/X11/xkb/keycodes/evdev</i> pardi !!! Voici une partie de ce fichier :

<pre>
        &lt;AB10&gt; = 61;<br />
        &lt;RTSH&gt; = 62;<br />
<br />
        &lt;LALT&gt; = 64;<br />
        &lt;LCTL&gt; = 37;<br />
        &lt;SPCE&gt; = 65;<br />
        &lt;RCTL&gt; = 105;<br />
        &lt;RALT&gt; = 108;<br />
        // Microsoft keyboard extra keys<br />
        &lt;LWIN&gt; = 133;<br />
        &lt;RWIN&gt; = 134;<br />
        &lt;COMP&gt; = 135;<br />
        alias &lt;MENU&gt; = &lt;COMP&gt;;<br />
<br />
        &lt;ESC&gt; = 9;<br />
        &lt;FK01&gt; = 67;<br />
        &lt;FK02&gt; = 68;<br />
        &lt;FK03&gt; = 69;<br />
        &lt;FK04&gt; = 70;</pre>

Conclusion, la touche 'windows' / 'super' s'appelle 'LWIN', je peux donc taper la commande suivante et passer à l'étape 2 :
<code>
$ setxkbmap -option 'compose:lwin'
</code>

<h2>Étape 2 : qu'est ce que je peux taper comme caractère ? Comment ajouter des caractères ?</h2>

Bon, donc maintenant, j'ai à priori accès à plein de touches très intéressantes en tapant 'windows' puis 'touche1' puis 'touche2'. Par exemple, en tapant 'windows' puis 'o' puis 'e' (tapées l'une à la suite de l'autre, pas besoin de maintenir la touche 'windows' appuyée), j'obtiens œ. 

Oui, mais quelles sont toutes les combinaisons possibles ? La première solution serait d'essayer toutes les combinaisons de touches de mon clavier. Sachant que 'compose' permet les combinaisons jusqu'à au moins trois touches et qu'un clavier normal possède environ 100 touches, il suffit donc de tester au bas mot 100x100x100 = un million de possibilités (sans compter les permutations)... Il y a quand même d'autres manières de passer son après-midi...

Une autre solution est de regarder dans les fichiers <i>/usr/share/locales/votrelocale/Compose</i>. Ainsi moi je regarde dans <i>usr/share/locales/iso8859-9/Compose</i>. Voici un extrait de ce fichier :

<pre>
&lt;Multi_key&gt; &lt;S&gt; &lt;1&gt;                          : &quot;271&quot;        onesuperior<br />
&lt;Multi_key&gt; &lt;1&gt; &lt;S&gt;                           : &quot;271&quot;        onesuperior<br />
&lt;Multi_key&gt; &lt;s&gt; &lt;1&gt;                           : &quot;271&quot;        onesuperior<br />
&lt;Multi_key&gt; &lt;1&gt; &lt;s&gt;                           : &quot;271&quot;        onesuperior<br />
&lt;Multi_key&gt; &lt;2&gt; &lt;asciicircum&gt;           : &quot;262&quot;        twosuperior<br />
&lt;Multi_key&gt; &lt;asciicircum&gt; &lt;2&gt;           : &quot;262&quot;        twosuperior<br />
&lt;Multi_key&gt; &lt;S&gt; &lt;2&gt;                           : &quot;262&quot;        twosuperior<br />
&lt;Multi_key&gt; &lt;2&gt; &lt;S&gt;                           : &quot;262&quot;        twosuperior<br />
&lt;Multi_key&gt; &lt;s&gt; &lt;2&gt;                           : &quot;262&quot;        twosuperior<br />
&lt;Multi_key&gt; &lt;2&gt; &lt;s&gt;                           : &quot;262&quot;        twosuperior<br />
&lt;Multi_key&gt; &lt;3&gt; &lt;asciicircum&gt;           : &quot;263&quot;        threesuperior<br />
&lt;Multi_key&gt; &lt;asciicircum&gt; &lt;3&gt;           : &quot;263&quot;        threesuperior</pre>

En gros, si on prend la première ligne, cela veut dire qu'en tapant 'windows' puis '1' puis 'S', j'obtiens le signe 'one superior' soit '¹'. 

Bon, en fait, on se rend compte que ce fichier est assez limité : on ne peut taper ni de ♥, ni de ☺. Heureusement, on peut définir son propre fichier de commande en créant le fichier <i>.XCompose</i> dans son dossier personnel et en ajoutant les commandes spécifiques à la main (ne pas oublier de commencer son fichier par la ligne <i>include "%L"</i> permettant de charger le fichier <i>.XCompose</i> de sa langue locale). Ou bien, pour les plus paresseux, en allant directement les chercher sur internet, de généreux utilisateur mettant en ligne leur propres fichiers <i>.XCompose</i> comme <a href="https://github.com/kragen/xcompose/blob/master/dotXCompose">celui-ci</a> proposé par <a href="http://canonical.org/~kragen/">Kragen</a>.

Voilà, maintenant on peut taper des trucs comme ∞, ☯... Enfin normalement. Il semble que j'ai des petits problèmes techniques à ce niveau là, le fichier <i>.XCompose</i> ne semblant pas se charger à cause de SCIM... Le bug est déjà reporté <a href="http://sourceforge.net/tracker/?func=detail&atid=650542&aid=1968906&group_id=108454">ici</a>. 

<b>Note :</b> Dans <i>Gedit</i>, on peut quand même faire en sorte de pouvoir taper une partie de ces caractères en faisant un clic droit dans la zone de saisie de texte et en sélectionnant <i>Méthodes de saisie → Simple</i>

<h2>Étape 3 : et comment la faire fonctionner avec SCIM, cette fonction Compose ?</h2>

Bref, comme vous avez pu le constater si vous avez lu la partie précédente, SCIM et xkb ne font pas forcément bon ménage. Ainsi, normalement, on peut attribuer la fonction compose à la touche de son choix au démarrage du serveur X en ajoutant au fichier <i>/etc/X11/xorg.conf.d/10-evdev.conf</i> la ligne <i>Option "XkbOption" "compose:lwin"</i> comme ceci :

<pre>
Section "InputClass"
        Identifier "evdev keyboard catchall"
        MatchIsKeyboard "on"
        MatchDevicePath "/dev/input/event*"
        Driver "evdev"
        Option "XkbLayout" "fr"
        Option "XkbOptions" "compose:lwin"
EndSection
</pre>

Malheureusement, avec SCIM activé, cela ne marche pas, et j'ai dû me résoudre à ajouter la commande <i>setxkbmap -option 'compose:lwin'</i> comme application à démarrer au lancement de gnome (en allant dans le menu <i>Système → Préférence → Application au démarrage</i> puis en cliquant sur 'ajouter' puis en recopiant la commande dans le champs 'commande'). J'espère que cela restera une solution temporaire.

<b>Quelques liens utiles</b>

<ul>
  <li> L'article de CalimeroTeknik : <a href="http://calimeroteknik.free.fr/blag/?article5/la-touche-compose">http://calimeroteknik.free.fr/blag/?article5/la-touche-compose</a></li>
  <li> Une explication sur la configuration d'xkb (en anglais), avec notamment une image d'un clavier avec les noms des touches : <a href="http://www.charvolant.org/~doug/xkb/html/node5.html">http://www.charvolant.org/~doug/xkb/html/node5.html</a></li>
  <li> La page sur la fonction 'compose' sur le wiki d'edubuntu : <a href="https://wiki.edubuntu.org/ComposeKey">https://wiki.edubuntu.org/ComposeKey</a></li>
</ul>


]]></content:encoded>
		<excerpt:encoded><![CDATA[Utilisation de la fonction/touche compose]]></excerpt:encoded>
		<wp:post_id>159</wp:post_id>
		<wp:post_date>2010-11-11 15:03:07</wp:post_date>
		<wp:post_date_gmt>2010-11-11 15:03:07</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>plus-de-details-sur-la-touche-compose</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="archlinux"><![CDATA[Archlinux]]></category>
		<category domain="post_tag" nicename="archlinux"><![CDATA[Archlinux]]></category>
		<category domain="post_tag" nicename="scim"><![CDATA[SCIM]]></category>
		<category domain="post_tag" nicename="xkb"><![CDATA[xkb]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>Personnalisation du bureau Gnome sous Archlinux</title>
		<link>http://vincent.cedeela.fr/?p=249</link>
		<pubDate>Sat, 02 Apr 2011 10:59:08 +0000</pubDate>
		<dc:creator><![CDATA[vincent]]></dc:creator>
		<guid isPermaLink="false">http://vincent.cedeela.fr/?p=249</guid>
		<description></description>
		<content:encoded><![CDATA[L'idée est d'obtenir le bureau suivant :

[caption id="attachment_303" align="aligncenter" width="544" caption="Mon Bureau"]<a href="http://vincent.cedeela.fr/wp-content/uploads/2011/04/bureau_20110402.png"><img src="http://vincent.cedeela.fr/wp-content/uploads/2011/04/bureau_20110402.png" alt="Mon Bureau" title="bureau_20110402" width="544" height="339" class="size-full wp-image-303" /></a>[/caption]

Pour cela, nous avons besoin de trois logiciels, nommés <i>DockBarX</i>, <i>GDesklets</i> et <i>Cairo-Dock</i>. Le rôle de chaque logiciel peut être vu sur l'image suivante :

[caption id="attachment_303" align="aligncenter" width="544" caption="Vue des logiciels"]<a href="http://vincent.cedeela.fr/wp-content/uploads/2011/04/bureau_20110402-2.png"><img src="http://vincent.cedeela.fr/wp-content/uploads/2011/04/bureau_20110402-2.png" alt="Mon Bureau" title="bureau_20110402" width="544" height="339" class="size-full wp-image-303" /></a>[/caption]

Nous allons donc installer ces trois logiciels.

<h1>Pré-requis : installation de Yaourt</h1>

Yaourt est un gestionnaire de paquets, au même titre que <i>pacman</i> sauf que <i>Yaourt</i> permet de télécharger et de générer des paquets depuis les dépôts AUR. Comme certains logiciels sont sur le dépôt AUR, on va se simplifier la vie en installant <i>yaourt</i>.

Pour cela il faut ajouter le dépôt archlinux.fr, ce qui revient à ajouter les lignes suivantes au fichier <i>/etc/pacman.conf</i> :
<pre>
[archlinuxfr] 
Server = http://repo.archlinux.fr/$arch</pre>

Puis lancer l'installation de yaourt :

<code># pacman -Sy yaourt</code>

<h1>DockBarX</h1>

<strong>Installation de DockBarX</strong>

<code>$ yaourt -Sy dockbarx</code>

<strong>Ajouter DockBarX à l'une de vos barres de tache</strong>

Si vous n'avez pas relancé gnome-panel après l'installation de DockBar X, relancer gnome-panel
<code>
$ ps aux | grep gnome-panel
$ kill -9 numeroDuProcessusGnomePanel
</code>

Après, clic droit sur l'endroit de la barre de taches où vous voulez ajouter DockBarX puis "Ajouter au tableau de bord → DockBarX applet"

<h1>GDesklets</h1>

<strong>installation de GDesklets</strong>

<code>$ yaourt -Sy gdesklets</code>

<strong>lancement de GDesklets</strong>

<code>$ gdesklets &</code>

télécharger des nouveaux desklets en allant sur le site http://gdesklets.de/, ci-dessus la liste des desklets que j'ai utilisé pour mon bureau, qui sont déjà installés par défaut.

<ul>
  <li>WorldTime Banner</li>
  <li>Calendar</li>
</ul>

Si vous souhaitez lancer GDesklets à chaque démarrage de la machine, cliquez sur <i>Système</i> en haut à droite, et allez dans <i>Préférences→Applications au démarrage</i>. Puis cliquez sur <i>Ajouter</i>, et dans le champ <i>commande</i> tapez <i>gdesklets</i>.

<h1>Cairo-Dock</h1>

<strong>Installation de Cairo-Dock</strong>
<code>
$ yaourt -Sy cairo-dock
$ yaourt -Sy cairo-dock-plug-ins
</code>

<strong>Lancement de Cairo-Dock</strong>

Cliquez sur le menu <i>Applications</i> (en haut à gauche), puis aller dans <i>Outils système→Cairo-Dock</i> pour lancer Cairo-Dock.

Pour rajouter des lanceurs d'application, il suffit de faire glisser les icônes depuis le menu <i>Applications</i> vers le dock.

Pour lancer Cairo-Dock à chaque démarrage, cliquez sur <i>Système</i> en haut à droite, et allez dans <i>Préférences→Applications au démarrage</i>. Puis cliquez sur <i>Ajouter</i>, et dans le champ <i>commande</i> tapez <i>cairo-dock -o</i> (pour lancer avec accélération OpenGL) ou <i>cairo-dock -c</i> (sans accélération OpenGL).]]></content:encoded>
		<excerpt:encoded><![CDATA[Personnalisation d'un bureau Gnome en utilisant Cairo-Dock, GDesklets et DockBarX]]></excerpt:encoded>
		<wp:post_id>249</wp:post_id>
		<wp:post_date>2011-04-02 10:59:08</wp:post_date>
		<wp:post_date_gmt>2011-04-02 10:59:08</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>personnalisation-du-bureau-gnome-sous-archlinux</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="archlinux"><![CDATA[Archlinux]]></category>
		<category domain="post_tag" nicename="gnome"><![CDATA[Gnome]]></category>
		<category domain="category" nicename="linux"><![CDATA[Linux]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>Écrire Chinois/Japonais sous CTKArch/Openbox</title>
		<link>http://vincent.cedeela.fr/?p=256</link>
		<pubDate>Sat, 02 Apr 2011 02:33:57 +0000</pubDate>
		<dc:creator><![CDATA[vincent]]></dc:creator>
		<guid isPermaLink="false">http://vincent.cedeela.fr/?p=256</guid>
		<description></description>
		<content:encoded><![CDATA[<a href="http://ctkarch.org/?fr">CTKArch</a> est une distribution archlinux visant à limiter au maximum la consommation de ressources tout en restant agréable à utiliser. Elle utilise notamment <a href="http://openbox.org/">Openbox</a> comme gestionnaire de fenêtres. 

Pour écrire Chinois, j'utilise <a href="http://www.scim-im.org/">SCIM</a> avec son extension SCIM-pinyin pour le Chinois, et SCIM-anthy pour le Japonais. J'utilise également les polices de caractères <i>Kaiti</i> et <i>Uming</i> (polices Chinoises). La première chose à faire est donc d'installer SCIM, ses extensions et les polices de caractères en tapant la commande suivante en administrateur :
<code>
 # pacman -Sy scim scim-pinyin scim-anthy ttf-arphic-ukai ttf-arphic-uming
</code>

Après il faut dire à votre ordinateur de passer par SCIM lorsque vous tapez quelque chose. Et c'est là que cela se gâte. Normalement, dans la configuration classique de SCIM (sous Gnome par exemple), il suffit de rajouter les lignes suivantes dans votre fichier <i>/etc/profile</i>. 

<pre>
# exportation des variables pour scim
export XMODIFIERS=@im=SCIM
export GTK_IM_MODULE="scim"
export QT_IM_MODULE="scim"
</pre>

Mais ici c'est différent. Il faut ajouter ces lignes à votre fichier <i>~/.config/openbox/autostart.sh</i> <b>AVANT</b> la ligne de lancement de la barre de tache (<i>fbpanel &</i> sous CTKArch) , comme ceci :

<pre>
# exportation des variables pour scim
export XMODIFIERS=@im=SCIM
export GTK_IM_MODULE="scim"
export QT_IM_MODULE="scim"

# lancement du panel
fbpanel &
</pre>

Après il ne reste plus qu'à ajouter la ligne de lancement du demon SCIM, à la fin du même fichier (<i>~/.config/openbox/autostart.sh</i>) :

<pre>
# lancement de scim
scim -d &
</pre>

Et voilà, normalement, au prochain redémarrage, il suffira de taper sur les touches <i>Controle + Maj</i> pour pouvoir taper Chinois/Japonais.]]></content:encoded>
		<excerpt:encoded><![CDATA[Installation de SCIM sur une distribution utilisant Openbox comme gestionnaire de fenêtre]]></excerpt:encoded>
		<wp:post_id>256</wp:post_id>
		<wp:post_date>2011-04-02 02:33:57</wp:post_date>
		<wp:post_date_gmt>2011-04-02 02:33:57</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>ecrire-chinoisjaponais-sous-ctkarchopenbox</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="archlinux"><![CDATA[Archlinux]]></category>
		<category domain="post_tag" nicename="ctkarch"><![CDATA[CTKArch]]></category>
		<category domain="category" nicename="linux"><![CDATA[Linux]]></category>
		<category domain="post_tag" nicename="openbox"><![CDATA[Openbox]]></category>
		<category domain="post_tag" nicename="scim"><![CDATA[SCIM]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>Authentification basique pour INN 2</title>
		<link>http://vincent.cedeela.fr/?p=269</link>
		<pubDate>Sat, 02 Apr 2011 03:26:03 +0000</pubDate>
		<dc:creator><![CDATA[vincent]]></dc:creator>
		<guid isPermaLink="false">http://vincent.cedeela.fr/?p=269</guid>
		<description></description>
		<content:encoded><![CDATA[<a href="http://www.isc.org/software/inn/">INN 2</a> (InterNetNews) est logiciel permettant de monter son propre serveur de news. Lorsque je l'ai installé sur mon serveur Debian, j'ai suivi le tutorial de <a href="http://www.taket.org/spip/article.php3?id_article=19">taket.org</a>. Malheureusement, celui n'explique pas comment faire en sorte que seul les utilisateurs identifiés puissent se connecter au serveur de news. D'où ce complément.

Pour réaliser cette authentification, les couples <i>utilisateurs/mot de passes</i> seront stockés dans un fichier généré par l'outil <i>htpasswd</i> de la fondation apache. Cet outil est installé lors de l'installation du serveur apache. Si vous ne voulez pas installer apache, vous pouvez récupérer htpasswd <a href="http://www.squid-cache.org/htpasswd/">ici</a> . Je suppose également que vous avez suivi le tutorial du site du Taket au moins jusqu'à la fin de la partie 3 (Mettre en place un serveur de news chez soi).

<h1>Génération du fichier de stockage des mots de passes</h1>

Vous créez le fichier (et ajoutez le premier utilisateur) en tapant la commande suivante :

<code># htpasswd -c -d /var/lib/news/passwd nomdupremierutilisateur</code>

On vous demande de taper deux fois un mot de passe et c'est gagné. L'option -c permet de créer le fichier. L'option -d force l'utilisation de l'outil de cryptage <i>crypt</i>. En effet, l'outil de vérification de mot de passe de INN2 ne marche qu'avec des mots de passe cryptés par <i>crypt</i>. 

<h1>Forcer l'authentification sur le serveur de news</h1>

Dans <i>/etc/news/readers.conf</i>, on va remplacer les lignes ci-dessous :

<pre>
auth "local" {
    hosts: "*.*"
    default: "<local>@taket.org"
}
access "local" {
    users: "<local>@taket.org"
    newsgroups: "*"
}
</pre>

Par les lignes suivantes :

<pre>
auth all {
    auth: "ckpasswd -f /var/lib/news/passwd"
}

access full {
    users: *
    newsgroups: "*"
}
</pre>

Voilà, maintenant tous les utilisateurs ne se connectant pas à partir de la machine sur laquelle le serveur de news est installé se verront demander un mot de passe. 

Penchons-nous un peu sur la ligne <i>auth: "ckpasswd -f /var/lib/news/passwd"</i>. Elle signale juste que l'authentification est soumise à une vérification de mot de passe via la commande <i>ckpasswd</i> qui grâce à l'option <i>-f</i> va vérifier que le login/mot de passe tapé existe dans le fichier <i>/var/lib/news/passwd</i>. Signalons que le programme de vérification <i>ckpasswd</i> peut être remplacé par un autre programme. De même, on peut stocker les couples login/mot de passe dans une base de données plutôt que dans un fichier. Base de données que nous irions chercher avec l'option <i>-d</i> à la place de <i>-f</i>.

<h1>Ajouter un utilisateur</h1>

Pour ajouter un utilisateur, il suffit de taper la même commande que pour créer le fichier de stockage des mots de passe, sauf que l'on supprime l'option <i>-c</i> :

<code># htpasswd -d /var/lib/news/passwd nomdutilisateur</code>




]]></content:encoded>
		<excerpt:encoded><![CDATA[Mise en place d'une authentification basique par login/mot de passe pour le serveur de news INN2.]]></excerpt:encoded>
		<wp:post_id>269</wp:post_id>
		<wp:post_date>2011-04-02 03:26:03</wp:post_date>
		<wp:post_date_gmt>2011-04-02 03:26:03</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>authentification-basique-pour-inn-2</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="administration-systeme"><![CDATA[Administration Système]]></category>
		<category domain="post_tag" nicename="inn2"><![CDATA[INN2]]></category>
		<category domain="category" nicename="linux"><![CDATA[Linux]]></category>
		<category domain="category" nicename="serveur"><![CDATA[Serveur]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>Exemples de fichiers de configuration Apache pour Wordpress</title>
		<link>http://vincent.cedeela.fr/?p=285</link>
		<pubDate>Sat, 02 Apr 2011 08:00:03 +0000</pubDate>
		<dc:creator><![CDATA[vincent]]></dc:creator>
		<guid isPermaLink="false">http://vincent.cedeela.fr/?p=285</guid>
		<description></description>
		<content:encoded><![CDATA[Voici deux exemples de fichier de configuration Apache pour Wordpress. Le premier fichier est le fichier le plus basique pour que wordpress fonctionne, le deuxième permet l'usage du https sur le site et force le https pour la partie administration du site (juste en utilisant la configuration Apache, sans avoir besoin de configurer Wordpress). Ces fichiers sont à mettre dans le dossier <i>/etc/apache2/sites-available</i>

<h1>Fichier de configuration basique</h1>

<pre>
&lt;VirtualHost *:80&gt;
  ServerAdmin monadresse@mail.fr
  ServerName mon.serveur.fr
  DocumentRoot /le/dossier/ou/wordpress/est/installé
&lt;/VirtualHost&gt;
</pre>

<h1>Fichier de configuration permettant l'accès crypté</h1>

<pre>
&lt;VirtualHost *:80&gt;
  ServerAdmin monadresse@mail.fr
  ServerName mon.serveur.fr
  DocumentRoot /le/dossier/ou/wordpress/est/installé
  # force la redirection vers https lorsque l'on veut se connecter à l'interface d'administration
  RewriteEngine On
  RewriteRule ^/wp-admin(.*)$ https://%{SERVER_NAME}/wp-admin$1 [R=permanent]
&lt;/VirtualHost&gt;

&lt;VirtualHost *:443&gt;
  ServerAdmin monadresse@mail.fr
  ServerName mon.serveur.fr
  DocumentRoot /le/dossier/où/wordpress/est/installé
  # connection ssl
  SSLEngine On
  SSLCertificateFile /chemin/vers/votre/certificat.crt
  SSLCertificateKeyFile /chemin/vers/votre/certificat.key
&lt;/VirtualHost&gt;
</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[Deux exemples de fichiers de configuration Apache pour WordPress]]></excerpt:encoded>
		<wp:post_id>285</wp:post_id>
		<wp:post_date>2011-04-02 08:00:03</wp:post_date>
		<wp:post_date_gmt>2011-04-02 08:00:03</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>exemples-de-fichiers-de-configuration-apache-pour-wordpress</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="apache"><![CDATA[Apache]]></category>
		<category domain="category" nicename="linux"><![CDATA[Linux]]></category>
		<category domain="category" nicename="serveur"><![CDATA[Serveur]]></category>
		<category domain="post_tag" nicename="wordpress"><![CDATA[WordPress]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>Installer IntelliJ IDEA sous Archlinux à partir des sources</title>
		<link>http://vincent.cedeela.fr/?p=324</link>
		<pubDate>Tue, 05 Apr 2011 15:26:18 +0000</pubDate>
		<dc:creator><![CDATA[vincent]]></dc:creator>
		<guid isPermaLink="false">http://vincent.cedeela.fr/?p=324</guid>
		<description></description>
		<content:encoded><![CDATA[<a href="http://www.jetbrains.com/idea/index.html">IntelliJ IDEA</a> est un IDE (environnement de développement logiciel) pour le langage Java.

<h1>Télécharger et Installer IDEA IntelliJ</h1>

Le téléchargement se fait <a href="http://www.jetbrains.com/idea/download/index.html">ici</a>. Une fois téléchargé, vous extrayez l'archive, allez dans le dossier ainsi extrait puis dans le dossier <i>bin</i>. Vous double-cliquez sur le fichier <i>idea.sh</i> et puis sur <i>Lancer</i> lors de l'affichage de la fenêtre de choix (sous Gnome).

<h1>Importation de projets depuis Eclipse</h1>

<ul>
  <li>Cliquez sur <i>File</i>, puis sur <i>New Project</i>. Une fenêtre apparait.</li>
  <li>Choisissez <i>Import Project from External Model</i>, puis cliquez sur <i>Next</i></li>
  <li>Choisissez <i>Eclipse</i>, puis cliquez sur <i>Next</i></li>
  <li>Définissez le chemin de votre projet ou de votre espace de travail Eclipse, puis cliquez sur <i>Next</i></li>
  <li>Selectionnez le projet à importer, puis cliquez sur <i>Next</i></li>
 </ul>

<h3>Problèmes avec le JDK</h3>

Pour l'importation/création du premier projet, à la fenêtre suivante, le logiciel vous demande de sélectionner le <i>JDK</i> du projet. Cliquez sur le petit plus en haut à gauche (en dessous de la phrase "This JDK will be used by default by all project modules"), vous sélectionnez <i>JSDK</i> puis entrez l'un des chemins suivants :

<ul>
  <li><i>/opt/java</i> si vous utilisez la machine virtuel java d'Oracle</li>
  <li><i>/usr/lib/jvm</i> si vous utilisez la machine virtuel java libre openJDK</li>
</ul>

Assez étrangement, lors de ma première importation, le logiciel me signale une erreur de chargement du JDK. Et du coup les bibliothèques standards java ne sont pas chargé (ce qui fait que le logiciel me signale des erreurs à chaque fois que j'utilise un type de données contenu dans la bibliothèque standard comme <i>String</i>). La solution est la suivante

<ul>
  <li>Cliquer sur <i>File</i>, puis <i>Project Structure</i>. 
  <li>De là, aller dans <i>Modules</i>, puis dans l'onglet <i>Dependencies</i>.
  <li>Dans le menu déroulant intitulé <i>Modules SDK</i>, choisir <i>1.6</i>.</li> 
  <li>Cliquer sur <i>Apply</i> puis <i>Ok</i>.</li>
  <li>Attendre un peu que le logiciel reconstruise le projet.</li>
</ul>
]]></content:encoded>
		<excerpt:encoded><![CDATA[Quelques astuces pour une installation de l'IDE IntelliJ IDEA à partir des sources.]]></excerpt:encoded>
		<wp:post_id>324</wp:post_id>
		<wp:post_date>2011-04-05 15:26:18</wp:post_date>
		<wp:post_date_gmt>2011-04-05 15:26:18</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>installer-intellij-idea-sous-archlinux-a-partir-des-sources</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="archlinux"><![CDATA[Archlinux]]></category>
		<category domain="category" nicename="developpement"><![CDATA[Développement]]></category>
		<category domain="post_tag" nicename="intellij-idea"><![CDATA[intelliJ IDEA]]></category>
		<category domain="post_tag" nicename="java-2"><![CDATA[java]]></category>
		<category domain="category" nicename="linux"><![CDATA[Linux]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>Extraire un article wikipedia en Java</title>
		<link>http://vincent.cedeela.fr/?p=332</link>
		<pubDate>Thu, 28 Apr 2011 10:10:54 +0000</pubDate>
		<dc:creator><![CDATA[vincent]]></dc:creator>
		<guid isPermaLink="false">http://vincent.cedeela.fr/?p=332</guid>
		<description></description>
		<content:encoded><![CDATA[<strong>Remarque : cette méthode  ne dois pas être utilisée pour récupérer un nombre important d'articles, Si vous souhaitez extraire un grand nombre d'articles, Wikipedia diffuse des sauvegardes (dump) de sa base de données à l'adresse <a href="http://dumps.wikimedia.org/">dumps.wikimedia.org</a>.</strong>

Je vais aujourd'hui vous présenter une méthode pour récupérer un article Wikipedia lorsqu'on a son titre en utilisant la page web de l'article. Pour cela, je vais utiliser la bibliothèque Jericho, qui fournit un parser HTML. Cette bibliothèque est disponible à l'adresse <a href="http://jericho.htmlparser.net/docs/index.html">jericho.htmlparser.net</a>. 

<h1>La bibliothèque Jericho</h1>

La bibliothèque Jericho est téléchargeable à cette adresse : <a href="http://sourceforge.net/projects/jerichohtml/files/">http://sourceforge.net/projects/jerichohtml/files/</a>, le fichier .jar est disponible, une fois la bibliothèque téléchargée et extraite, dans le dossier <i>dist</i>, il ne vous reste plus qu'à l'ajouter à votre projet en utilisant votre IDE préféré. La javadoc est disponible à l'adresse suivante : <a href="http://jericho.htmlparser.net/docs/javadoc/index.html">http://jericho.htmlparser.net/docs/javadoc/index.html</a>. Voici une liste des classes et des méthodes utilisées dans cet exemple :

<h2>Source</h2>

Cette classe représente une page web extraite à l'aide de Jericho. Les méthodes utilisées dans l'exemple sont :

<ul>
  <li><strong>Source(URL url)</strong> Le constructeur. Récupère la page web pointée par l'url.</li>
  <li><strong>getNextStartTag(int pos)</strong> Retourne la première balise html ouvrante suivant la position &quot;pos&quot;.</li>
  <li><strong>getNextStartTag(int pos, String name)</strong> Permet, contrairement à la méthode précédante, de selectionner le type (div, title...) de la balise. Ainsi la méthode retournera la première balise ouvrante d'un type particulier. La balise est passée en paramètre comme une string, par exemple getNextStartTag(0, &quot;div&quot;)</li>
</ul> 

<h2>StartTag</h2>

Cette classe représente une balise html ouvrante. Les méthodes utilisées dans l'exemple sont :

<ul>
  <li><strong>getName()</strong> Retourne le type de la balise, par exemple &quot;div&quot;, &quot;title&quot;... </li>
  <li><strong>getAttributeValue(String attribute)</strong> Retourne la valeur de l'attribut passé en paramètre. Ainsi, pour la balise &lt;div id=&quot;12&quot; &gt;, la méthode getAttributeValue(&quot;id&quot;) retournera la chaine de caractère &quot;12&quot;.</li>
  <li><strong>getElement()</strong> Retourne un objet Element qui contient tout ce qui est encapsulé par la balise, par exemple, pour la balise &lt;title&gt; dans "&lt;title&gt;Mon Titre&lt;/title&gt;", la méthode retournera un Element qui contiendra "&lt;title&gt;Mon Titre&lt;/title&gt;"</li>
</ul>

<h2>Element</h2>

C'est la classe qui contient tout ce qui est compris entre 2 balises, incluant les balises. La méthode utilisée dans l'exemple est :

<ul>
  <li><strong>GetContent()</strong> Récupère ce qui est compris entre les 2 balises, sans les balises. Retourne un objet Content dont la méthode toString permet de récupérer le contenu au format String</li>
</ul>

<h1>La méthode d'extraction</h1>

Voici la méthode que j'ai codée. Je la décrierai ensuite ligne par ligne

<pre>
import net.htmlparser.jericho.HTMLElementName;
import net.htmlparser.jericho.Source;
import net.htmlparser.jericho.StartTag;
import java.io.*;
import java.net.URL;

public Class ArticleExtractor {
  /**
  * Récupère un article wikipedia d'après le titre
  * @param articleTitle Le titre de l'article
  */
  public static String getFromWeb(String articleTitle) throws IOException {

    // récupère la page à partir de wikipedia
    String title = articleTitle.replace(&quot; &quot;, &quot;_&quot;);
    String url = &quot;http://fr.wikipedia.org/wiki/&quot; + title;
    Source source = new Source(new URL(url));

    // récupère l'article wikipedia
    for (int pos=0; pos&lt;source.length();) {
      StartTag startTag=source.getNextStartTag(pos, HTMLElementName.DIV);
      if (startTag==null) return null;
      if (startTag.getAttributeValue(&quot;id&quot;).compareTo(&quot;bodyContent&quot;)==0) {
		    return startTag.getElement().getContent().toString();
      }
      pos=startTag.getEnd();
    }
  }
}
</pre>

<h2>Analyse</h2>

<h3>Les importations de bibliothèques</h3>
J'importe de la bibliothèque Jericho les noms des éléments HTML (HTMLElementName), la classe Source qui est le récupérateur de page web, ainsi que la classe StartTag qui représente les tag HTML de début (par exemple &lt;div&gt;...). J'importe également la classe URL qui me permet de former une url à partir d'une chaine de caractères ainsi que le paquetage gérant les entrées-sorties.


<blockquote> 
import net.htmlparser.jericho.HTMLElementName;
import net.htmlparser.jericho.Source;
import net.htmlparser.jericho.StartTag;
import java.io.*;
import java.net.URL;
</blockquote>

<h3>La méthode proprement dite</h3>

Bien sûr, on commence par déclarer la methode. Je prends pour argument une chaine de caractères qui est le titre de l'article. Le titre pris en argument est un titre classique avec espace, par exemple "Abraham Lincoln".

<blockquote>
public static String getFromWeb(String articleTitle) throws IOException {
</blockquote>

Je forme ensuite l'url. Pour cela, je formatte d'abord le titre en replaçant les espaces par des tirets bas, puis j'ajoute en tête de la chaine de caractères obtenue le début de l'url, ici &quot;http://fr.wikipedia.org/wiki/&quot;. Bien sûr, cette url peut être modifiée selon la langue que l'on veut extraire.


<blockquote>
    String title = articleTitle.replace(&quot; &quot;, &quot;_&quot;);
    String url = &quot;http://fr.wikipedia.org/wiki/&quot; + title;
</blockquote>

Après, je récupère la page web contenant l'article avec la ligne suivante.


<blockquote>
    Source source = new Source(new URL(url));
</blockquote>

Maintenant, il me faut traiter cette page. En effet, je ne veux pas des menus, juste le contenu de l'article. Pour cela je vais parcourir l'objet source précédemment créé à la recherche de balises html &lt;div&gt;, qui encapsulent les contenus. Le parcours se fait à l'aide d'une boucle &quot;for&quot;. la variable &quot;pos&quot; determine la position du caractère que l'on est en train de lire. Cet élément n'est pas incrémenté, nous verrons pourquoi par la suite.


<blockquote>
    for (int pos=0; pos&lt;source.length();) {
</blockquote>

Je recherche donc les balises div à l'aide de la methode &quot;getNextStartTag&quot;, avec en paramètre la position après laquelle je veux rechercher la balise et la nature de la balise que je recherche, ici &quot;HTMLElementName.DIV&quot; qui représente la balise &quot;div&quot;. Je mets le résultat de cette méthode dans un objet StartTag pour me permettre de travailler dessus ensuite.

<blockquote>
      StartTag startTag=source.getNextStartTag(pos, HTMLElementName.DIV);
</blockquote>

S'il n'y a plus de balise &quot;div&quot; après la position &quot;pos&quot;, la méthode &quot;getNextStartTag&quot; utilisée ci-dessus retourne &quot;null&quot;. Dans ce cas, la page récupérée ne contient pas d'articles wikipedia et donc notre méthode retourne &quot;null&quot;. On peut noter qu'on pourrait également lever une exception.

<blockquote>
      if (startTag==null) return null;
</blockquote>

Par contre, s'il existe une balise &quot;div&quot;, on vérifie que son identifiant CSS (&quot;id&quot;) vaut &quot;bodyContent&quot;. En effet, dans wikipedia, les articles sont encapsulés entre deux balises &lt;div id=&quot;bodyContent&quot;&gt; et &lt;/div&gt;.

<blockquote>
      if (startTag.getAttributeValue(&quot;id&quot;).compareTo(&quot;bodyContent&quot;)==0) {
</blockquote>

Si la balise &lt;div&gt a bien pour identifiant &quot;bodyContent&quot;, on récupére le contenu de la balise à l'aide des méthodes getElement().getContent() que l'on transforme en chaine de caractères à l'aide de la méthode toString(). Si vous voulez récupérer cette variable (et donc ne pas mettre d'évènement &quot;return&quote;), n'oublier pas d'ajouter une instruction &quot;break;&quot; après cette ligne pour stopper le processus d'analyse de la page web.

<blockquote>
        return startTag.getElement().getContent().toString();
</blockquote>

Nous arrivons à la raison pourquoi nous n'avons pas incrémenté la variable &quot;pos&quot;. En effet l'incrémentation se passe ici. Si le startTag n'est pas la balise recherchée, on place la tête de lecture de caractères à la fin de cette balise et on recommence.

<blockquote>
      pos=startTag.getEnd();
</blockquote>

Voilà, on a extrait l'article contenu dans une page wikipedia en partant du titre de celle-ci. J'espère pouvoir bientôt faire un article sur l'extraction de données en utilisant les sauvegardes XML Wikipedia.]]></content:encoded>
		<excerpt:encoded><![CDATA[Création d'un programme permettant de récupérer un article Wikipedia à partir de son titre via internet.]]></excerpt:encoded>
		<wp:post_id>332</wp:post_id>
		<wp:post_date>2011-04-28 10:10:54</wp:post_date>
		<wp:post_date_gmt>2011-04-28 10:10:54</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>extraire-un-article-wikipedia-en-java</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="developpement"><![CDATA[Développement]]></category>
		<category domain="post_tag" nicename="java-2"><![CDATA[java]]></category>
		<category domain="category" nicename="java-developpement"><![CDATA[Java]]></category>
		<category domain="post_tag" nicename="jericho-html-parser"><![CDATA[Jericho HTML Parser]]></category>
		<category domain="post_tag" nicename="wikipedia"><![CDATA[Wikipedia]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>Taper un message coloré pré-enregistré grâce à un Alias avec Irssi.</title>
		<link>http://vincent.cedeela.fr/?p=366</link>
		<pubDate>Fri, 29 Apr 2011 08:13:28 +0000</pubDate>
		<dc:creator><![CDATA[vincent]]></dc:creator>
		<guid isPermaLink="false">http://vincent.cedeela.fr/?p=366</guid>
		<description></description>
		<content:encoded><![CDATA[Le but de ce cet article est de taper un message coloré pré-enregistré sur le canal IRC sur lequel on est à l'aide d'un alias en utilisant le logiciel de messagerie Irssi.

<h2>Taper un message sur le canal courant à l'aide d'un alias</h2>

La première étape est de réussir à taper un message sur le canal actif à l'aide d'un alias, pour cela on ouvre le fichier de configuration de Irssi, qui est s'appelle <i>config</i> et se situe dans le dossier <i>.irssi</i> de votre répertoire <i>home</i> et on cherche la ligne commençant par &quot;aliases&quot;, qui, dans le fichier de configuration par défaut, se présente comme cela :

<pre>
aliases = {
  J = &quot;join&quot;;
  WJOIN = &quot;join -window&quot;;
  WQUERY = &quot;query -window&quot;;
  LEAVE = &quot;part&quot;;
</pre>

Dans cette fonction sont décrits tous les alias. Par exemple, si, une fois Irssi lancé, je tape <i>/J #canal</i>, Irssi lancera la commande <i>/join #canal</i> et vous vous retrouverez sur le canal #canal. Maintenant, on va ajouter un alias  à /bonj qui va afficher le texte &quot;Salut les copains&quot; sur le canal sur lequel on est. Pour cela, on ajoute la ligne <i>BONJ = &quot;msg $C Salut les copains&quot;</i> juste après la ligne contenant aliases comme ceci :

<pre>
aliases = {
  BONJ = &quot;msg $C Salut les copains&quot;;
  J = &quot;join&quot;;
  WJOIN = &quot;join -window&quot;;
  WQUERY = &quot;query -window&quot;;
  LEAVE = &quot;part&quot;;
</pre>

La commande /msg permet d'envoyer un message et $C est la variable Irssi relatif au canal actif. Voilà, maintenant, en relançant irssi et en tapant /bonj sur un canal quelconque, le message "Salut les copains" s'affichera sur ce canal.

<h2>Taper un message coloré en utilisant un alias</h2>

Normalement, pour taper un message coloré sur un canal avec irssi, il suffit d'appuyer simultanément sur les touches &lt;Control&gt; + C puis de taper le numéro de la couleur, puis de taper son texte. Méthode qui n'est pas applicable lorsque l'on veut créer un alias. Pour avoir la couleur dans un alias, il faut taper \003 et le numéro de la couleur avant le texte coloré. Par exemple, le code couleur du gris est 14. Pour taper en gris, il me faudra donc mettre dans mon alias, avant le texte que je veux colorer en gris, \00314. Les autres codes couleurs peuvent être obtenus à l'adresse suivante : <a href="http://www.irssi.org/documentation/formats">http://www.irssi.org/documentation/formats</a>, section &quot;MIRC colors that you can use when writing text to channel&quot;. 

Aisni, dans notre alias précédent, si l'on veut afficher &quot;Salut&quot; en bleu, &quot;les&quot; en blanc et &quot;copains&quot; en bleu lorsque l'on tape l'alias \bonj, il faut modifier l'alias dans le fichier config comme ceci :

<pre>
  BONJ = &quot;msg $C \0032Salut \0030les \0035copains&quot;;
</pre>

Où \0032 représente la couleur bleu (code couleur : 2), \0030 la couleur blanche (code couleur : 0) et \0035 la couleur rouge (code couleur : 5). ]]></content:encoded>
		<excerpt:encoded><![CDATA[Le but de ce cet article est de taper un message coloré sur le canal IRC sur lequel on est à l'aide d'un alias en utilisant le logiciel de messagerie Irssi.]]></excerpt:encoded>
		<wp:post_id>366</wp:post_id>
		<wp:post_date>2011-04-29 08:13:28</wp:post_date>
		<wp:post_date_gmt>2011-04-29 08:13:28</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>taper-un-message-colore-pre-enregistre-grace-a-un-alias-avec-irssi</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="divers"><![CDATA[Divers]]></category>
		<category domain="post_tag" nicename="irssi"><![CDATA[irssi]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>Changer la machine virtuelle Java par défaut sous Archlinux</title>
		<link>http://vincent.cedeela.fr/?p=391</link>
		<pubDate>Sun, 18 Mar 2012 14:51:32 +0000</pubDate>
		<dc:creator><![CDATA[vincent]]></dc:creator>
		<guid isPermaLink="false">http://vincent.cedeela.fr/?p=391</guid>
		<description></description>
		<content:encoded><![CDATA[Le but est de changer la machine virtuelle java utilisée par défaut par votre distribution Archlinux. Sur les distributions de type Debian, on execute ce changement de machine virtuelle en utilisant la commande <code># update-alternatives --config java</code>. Sous Archlinux on n'a pas ce genre de scripts, on est obligé de changer les variables systèmes directement à la main.

<h2>Installation des machines virtuelles</h2>

Je souhaite installer en parallèle la version 7 d'openjdk et la version 6 de la machine virtuelle java d'Oracle. J'ai donc installé les paquets fournissant ces logiciels en executant les commandes suivantes, tout d'abord j'ai installé openjdk :
 
<code># pacman -S jre7-openjdk jdk7-openjdk</code>

Puis j'ai installé la machine virtuelle java d'Oracle, à l'aide du logiciel yaourt (qui permet d'installer des paquets à partir d'AUR) :

<code>$ yaourt -S jre6-compat jdk6-compat</code>

<h2>Changer de machine virtuelle</h2>

Par défaut, c'est la machine virtuelle openjdk qui est choisie. cette machine virtuelle est choisie lors de l'initialisation du système, plus particulièrement lors de l'execution des scripts <i>jre.sh</i> et <i>jdk.sh</i> situés dans le dossier <i>/etc/profile.d</i>. En effet, lors de l'initialisation du système, et pour peu que vous utilisiez un shell bash ou compatible, sont executés tous les scripts contenus dans le dossier <i>/etc/profile.d</i> se terminant par ".sh". Si vous utilisez un shell csh ou tcsh, ce sera tous les scripts se terminant par ".csh" qui seront executés. Pour la suite de l'article ce sera un shell bash qui sera utilisé.

Nous allons faire en sorte que ces scripts <i>jre.sh</i> et <i>jdk.sh</i> ne soient pas executés et nous allons les remplacer par les scripts <i>jre6.sh</i> et <i>jdk6.sh</i>. Pour cela, nous allons d'abord commenter toutes les lignes des fichiers <i>/etc/profile.d/jre.sh</i> et <i>/etc/profile.d/jdk.sh</i> comme montré ci-dessous. Tout d'abord le fichier <i>jre.sh</i> :

<pre>
# export J2REDIR=/usr/lib/jvm/java-7-openjdk/jre
# export JAVA_HOME=${JAVA_HOME:-/usr/lib/jvm/java-7-openjdk/jre}

# enable this for non-reparenting window managers
#export _JAVA_AWT_WM_NONREPARENTING=1
</pre>

et le fichier <i>jdk.sh</i> :

<pre>
# export J2SDKDIR=/usr/lib/jvm/java-7-openjdk
# export J2REDIR=$J2SDKDIR/jre
# export JAVA_HOME=/usr/lib/jvm/java-7-openjdk

# For non-reparenting window managers, enable '_JAVA_AWT_WM_NONREPARENTING'
# in /etc/profile.d/jre7.sh
</pre>

Désormais, si les fichiers <i>jre6.sh</i> et <i>jdk6.sh</i> existent dans le répertoire <i>/etc/profile.d</i>, ce sera la machine virtuelle Oracle qui sera utilisée par défaut. Sinon, il faut encore créer ces deux fichiers.

<h2>Création des fichiers d'initialisation</h2>

Si les fichiers <i>jre6.sh</i> et <i>jdk6.sh</i> n'existent pas dans le répertoire <i>/etc/profile.d</i>, il faut les créer dans ce répertoire et les remplir comme ci-dessous. d'abord pour le fichier <i>jre6.sh</i> :

<pre>
export PATH=$PATH:/opt/java6/jre/bin
export JAVA_HOME=${JAVA_HOME:-/opt/java6/jre}
</pre>

et le fichier <i>jdk6.sh</i>

<pre>
export J2SD6KDIR=/opt/java6
export PATH=$PATH:/opt/java6/bin:/opt/java6/db/bin
export JAVA6_HOME=/opt/java6
export DERBY6_HOME=/opt/java6/db
</pre>

Après il faut les rendre executables avec les deux commandes suivantes :

<code># chmod 755 /etc/profile.d/jre6.sh
# chmod 755 /etc/profile.d/jdk6.sh</code>

<h2>Conclusion</h2>

Voilà, il ne reste plus qu'à redémarrer pour avoir comme machine virtuelle java par défaut la machine virtuelle Oracle. Une simple commande permettant de le vérifier :

<code>$ echo $JAVA_HOME</code> 

qui doit vous renvoyer <i>/opt/java6/jre</i>. Pour rechanger la machine virtuelle par défaut, il vous suffit de commenter toutes les lignes des fichiers <i>jre6.sh</i> et <i>jdk6.sh</i> (en ajoutant "#" au début de chaque ligne) et de décommenter toutes les lignes des fichiers <i>jre.sh</i> et <i>jdk.sh</i> (en enlevant "#" au début de chaque ligne commençant par export).

<i>Références</i>
<i><a href="https://wiki.archlinux.org/index.php/Autostarting">Processus d'initialisation d'Archlinux</a></i>
<i><a href="http://www.chicoree.fr/w/Profile.d_et_ses_alternatives">Utilisation du dossier profile.d</a></i>

]]></content:encoded>
		<excerpt:encoded><![CDATA[Changer la machine virtuelle java choisie par défaut au démarrage d'un système Archlinux]]></excerpt:encoded>
		<wp:post_id>391</wp:post_id>
		<wp:post_date>2012-03-18 14:51:32</wp:post_date>
		<wp:post_date_gmt>2012-03-18 14:51:32</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>changer-la-machine-virtuelle-java-par-defaut-sous-archlinux</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="archlinux"><![CDATA[Archlinux]]></category>
		<category domain="post_tag" nicename="archlinux"><![CDATA[Archlinux]]></category>
		<category domain="post_tag" nicename="java-2"><![CDATA[java]]></category>
		<category domain="category" nicename="java-developpement"><![CDATA[Java]]></category>
		<category domain="post_tag" nicename="jre"><![CDATA[jre]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>74</wp:comment_id>
			<wp:comment_author><![CDATA[max-k]]></wp:comment_author>
			<wp:comment_author_email>max-k@post.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>109.197.176.10</wp:comment_author_IP>
			<wp:comment_date>2012-09-28 08:52:30</wp:comment_date>
			<wp:comment_date_gmt>2012-09-28 08:52:30</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Bonjour,
J'essaye d'utiliser openjdk7 par défaut mais de faire en sorte que icedtea utilise java6.
J'ai installé jre6-compat et j'ai modifié le chemin de java dans le fichier ~/.java/deployement/deployement.properties mais ça fonctionne pas.
Auriez-vous une idée concernant la bonne marche à suivre ?
Merci d'avance.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
				<title>Autoriser un utilisateur à voir tous les processus sur un serveur OVH</title>
		<link>http://vincent.cedeela.fr/?p=413</link>
		<pubDate>Sat, 28 Apr 2012 18:17:30 +0000</pubDate>
		<dc:creator><![CDATA[vincent]]></dc:creator>
		<guid isPermaLink="false">http://vincent.cedeela.fr/?p=413</guid>
		<description></description>
		<content:encoded><![CDATA[Il y a quelque temps, j'ai installé zabbix (un système de monitoring) sur un serveur OVH. Malheureusement, l'utilisateur zabbix que l'on crée à l'installation de zabbix n'a pas accès à la liste de tous les processus mais seulement à ceux qu'il a lancés. Or c'est cet utilisateur zabbix qui fait les requêtes pour vérifier que certains programmes, dont certains lancés par d'autres utilisateurs, fonctionnent. 

Ainsi, afin d'avoir une application zabbix qui fonctionne parfaitement, il me fallait trouver le moyen que l'utilisateur zabbix ait accès à tous les processus.

<h1>Pourquoi par défaut un utilisateur ne peut pas lister tous les processus sur une machine OVH ?</h1>

La raison tient en un mot :<a href="http://grsecurity.net/"> grsecurity</a>. Grsecurity est un patch à appliquer au noyau linux qui permet de rendre celui-ci plus sécurisé. Ainsi, sur un noyau patché avec grsecurity, les utilisateurs et processus ont les droits minimaux nécessaires à leur execution. OVH fournit par défaut des noyaux patchés avec grsecurity sur leurs serveurs dédiés. Ce qui pose problème dans notre cas car du coup, zabbix n'a pas accès à la liste de tous les processus fonctionnant sur la machine.

Pour remédier à cela, il y a deux solutions. La première est de recompiler le noyau avec grsecurity mais en modifiant certaines options afin qu'un groupe avec un GID (identifiant de groupe) défini donne le droit à ses membres de voir tous les processus. La deuxième est de changer de noyau pour choisir un noyau sans grsecurity. 

<h1>Première solution : recompiler le noyau (non testé)</h1>

La première solution est de recompiler le noyau avec grsecurity en changeant certaines options. Je ne l'ai pas fait mais l'idée est de créer un groupe, noter son GID, et ajouter l'utilisateur à ce groupe. Ensuite on récupère les sources du noyau, on le patch avec grsecurity, on modifie la configuration de grsecurity en y mettant les valeurs suivantes (remplacer 1001 par le GID précédemment noté):

<pre>
CONFIG_GRKERNSEC_PROC_MEMMAP=y
CONFIG_GRKERNSEC_PROC=y
CONFIG_GRKERNSEC_PROC_USER=y
CONFIG_GRKERNSEC_PROC_USERGROUP=y
CONFIG_GRKERNSEC_PROC_GID=1001
CONFIG_GRKERNSEC_PROC_ADD=y
</pre>

Pour avoir une idée des commandes à executer: <a href="http://blog.arkanes.org/index.php/Customisation_serveur_OVH">http://blog.arkanes.org/index.php/Customisation_serveur_OVH</a>
Et sur le sens des options à modifier : <a href="http://en.wikibooks.org/wiki/Grsecurity/Appendix/Grsecurity_and_PaX_Configuration_Options#Proc_restrictions">Grsecurity, section proc restriction</a> <i>(en anglais)</i>

<h1>deuxième solution : remplacer le noyau compilé avec grsecurity par un noyau standard</h1>

cette procédure est expliquée sur le site d'OVH : <a href="http://guide.ovh.com/printPage/KernelInstall">http://guide.ovh.com/printPage/KernelInstall</a>. il suffit de récupérer le nom de votre noyau, remplacer <i>grs</i> par <i>std</i> dans ce nom et de téléchager cette version là sur le site <a href="ftp://ftp.ovh.net/made-in-ovh/bzImage/">ftp://ftp.ovh.net/made-in-ovh/bzImage/</a>.

La liste des commandes à exécuter, pour un noyau debian :
<code>
# cd /boot
# uname -r | sed s/grs/std/g | sed s/-stdec//| sed s,^,ftp://ftp.ovh.net/made-in-ovh/bzImage/bzImage-, | xargs wget
# update-grub
# reboot
</code>

la commande commençant par <i>uname -r</i> permet de récupérer la version du noyau standard correspondant à la version grsecurity installé. 

<h1>Les trucs qui ne marchent pas</h1>

<h2>Utiliser sysctl</h2>

sysctl est une commande permettant de changer à chaud les paramètres du noyau. Malheureusement, la configuration de grsecurity choisie par OVH ne semble pas permettre de changer les paramètres de grsecurity via cette méthode.

<h2>Ajouter l'utilisateur au groupe ayant pour GID 10 ou pour nom wheel</h2>

Dans certaines installations par défaut de grsecurity, il semble que le privilège de voir les processus soit donné au groupe wheel ayant pour GID 10. Ce n'est pas le cas pour les serveurs OVH.

<h1>Conclusion</h1>

Voilà, après avoir utilisé la première ou la deuxième méthode, notre utilisateur a accès à la liste des processus. La première méthode permet de conserver grsecurity, en perdant le confort d'un noyau compilé par OVH alors que la deuxième méthode, c'est l'inverse.]]></content:encoded>
		<excerpt:encoded><![CDATA[Permettre à un utilisateur (par exemple l'utilisateur créé par un logiciel de monitoring) d'avoir accès à la liste complète des processus tournant sur un serveur debian OVH, et non pas seulement à la liste de ses processus.]]></excerpt:encoded>
		<wp:post_id>413</wp:post_id>
		<wp:post_date>2012-04-28 18:17:30</wp:post_date>
		<wp:post_date_gmt>2012-04-28 18:17:30</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>autoriser-un-utilisateur-a-voir-tous-les-processus-sur-un-serveur-ovh</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="debian"><![CDATA[debian]]></category>
		<category domain="post_tag" nicename="grsecurity"><![CDATA[grsecurity]]></category>
		<category domain="category" nicename="linux"><![CDATA[Linux]]></category>
		<category domain="post_tag" nicename="linux-2"><![CDATA[linux]]></category>
		<category domain="post_tag" nicename="monitoring"><![CDATA[monitoring]]></category>
		<category domain="post_tag" nicename="ovh"><![CDATA[ovh]]></category>
		<category domain="post_tag" nicename="processus"><![CDATA[processus]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
</channel>
</rss>
